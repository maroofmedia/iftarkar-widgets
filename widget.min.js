document.addEventListener("DOMContentLoaded", function () {
  // Get the widget container
  const widgetContainer = document.getElementById("prayer-timings-widget");

  if (!widgetContainer) return;

  // Add the title
  const title = document.createElement("div");
  title.className = "title";
  title.textContent = "Ramzan Timings";
  widgetContainer.appendChild(title);

  // Add the current date
  const currentDate = document.createElement("div");
  currentDate.className = "current-date";
  const today = new Date();
  const options = { weekday: 'long', year: 'numeric', month: 'long', day: 'numeric' };
  currentDate.textContent = today.toLocaleDateString(undefined, options);
  widgetContainer.appendChild(currentDate);

  // Fetch data from the API
  fetch("https://jkmeeqat-api.pages.dev/data.json")
    .then((response) => response.json())
    .then((data) => {
      const institutions = data.data;

      // Create the dropdown
      const select = document.createElement("select");
      select.id = "institution-select";

      // Populate the dropdown with institutions
      Object.keys(institutions).forEach((key) => {
        const option = document.createElement("option");
        option.value = key;
        option.textContent = institutions[key].name;
        select.appendChild(option);
      });

      // Append the dropdown to the widget
      widgetContainer.appendChild(select);

      // Check if there's a saved institution in localStorage
      const savedInstitution = localStorage.getItem("selectedInstitution");
      if (savedInstitution && institutions[savedInstitution]) {
        select.value = savedInstitution; // Set the dropdown to the saved institution
      }

      // Function to update prayer timings
      function updateTimings(institutionKey) {
        const institution = institutions[institutionKey];
        const today = new Date();
        const dateKey = `${String(today.getDate()).padStart(2, "0")}${String(today.getMonth() + 1).padStart(2, "0")}`;
        const timings = institution.timings[dateKey] || {};

        // Clear existing table
        const existingTable = widgetContainer.querySelector("table");
        if (existingTable) {
          widgetContainer.removeChild(existingTable);
        }

        // Convert time to 12-hour format
        function to12HourFormat(time) {
          if (!time) return "--:--";
          const [hours, minutes] = time.split(":").map(Number);
          const period = hours >= 12 ? "PM" : "AM";
          const formattedHours = hours % 12 || 12; // Convert 0 to 12
          return `${formattedHours}:${String(minutes).padStart(2, "0")} ${period}`;
        }

        // Create a new table
        const table = document.createElement("table");
        const headerRow = document.createElement("tr");
        ["Khatam-e-Sahri (Fajr)", "Iftar (Maghrib)"].forEach((label) => {
          const th = document.createElement("th");
          th.textContent = label;
          headerRow.appendChild(th);
        });
        table.appendChild(headerRow);

        const dataRow = document.createElement("tr");
        ["fajr", "maghrib"].forEach((prayer) => {
          const td = document.createElement("td");
          td.textContent = to12HourFormat(timings[prayer]);
          dataRow.appendChild(td);
        });
        table.appendChild(dataRow);

        // Append the table to the widget
        widgetContainer.appendChild(table);

        // Add credit text (only if it doesn't already exist)
        let credit = widgetContainer.querySelector(".credit");
        if (credit) {
          widgetContainer.removeChild(credit); // Remove existing credit text
        }
        credit = document.createElement("div");
        credit.className = "credit";
        credit.innerHTML = `Special thanks to <a href="https://iftarkar.com" target="_blank">iftarkar</a> for the Data.`;
        widgetContainer.appendChild(credit);
      }

      // Initial update based on saved or default institution
      updateTimings(select.value);

      // Listen for changes in the dropdown
      select.addEventListener("change", () => {
        const selectedInstitution = select.value;
        updateTimings(selectedInstitution);

        // Save the selected institution to localStorage
        localStorage.setItem("selectedInstitution", selectedInstitution);
      });
    })
    .catch((error) => {
      console.error("Error fetching data:", error);
      widgetContainer.innerHTML = "<p>Failed to load prayer timings. Please try again later.</p>";
    });
});